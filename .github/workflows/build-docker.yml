name: Docker Image Build
on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: europe-west10-docker.pkg.dev/finveloxrepo/image-repo
  IMAGE_NAME: pergamon

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get tag
      id: get-tag
      run: | 
          echo "image_ver=$(grep 'version=' gradle.properties | cut -d '=' -f 2)" >> "$GITHUB_OUTPUT"
          echo "full_tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$(grep 'version=' gradle.properties | cut -d '=' -f 2)" >> "$GITHUB_OUTPUT"
    - id: auth
      name: Google Cloud Authentication
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: 'finveloxrepo'
        token_format: access_token
        service_account: artifact-writer-sa@finveloxrepo.iam.gserviceaccount.com
        workload_identity_provider: 'projects/353261725168/locations/global/workloadIdentityPools/github-wi-pool/providers/github-actions-provider'
    - name: Login to Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: europe-west10-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        provenance: false
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.image_ver }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.image_ver }}-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Setup kubectl
      uses: azure/setup-kubectl@v4
      with:
         version: 'latest'
      id: install
    - name: Set kube context
      uses: azure/k8s-set-context@v4
      with:
         method: kubeconfig
         kubeconfig: ${{ secrets.PERGAMON_K8S_CONFIG }}
    - name: Deploy to kubernetes
      run: |
          sed -e "s/__IMAGE_NAME__/${{ env.IMAGE_NAME }}/g" -e "s/__IMAGE_VER__/${{ steps.get-tag.outputs.image_ver }}/g" k8s/kube-template.yaml | ${{ steps.install.outputs.kubectl-path }} apply -n pergamon -f -
